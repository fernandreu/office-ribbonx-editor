parameters:
- name: createRelease
  displayName: Create GitHub Release
  default: false
  type: boolean

trigger:
  branches:
    include:
    - master
  tags:
    exclude:
    - 'v*'
  paths:
    exclude:
    - LICENSE
    - THIRD-PARTY-NOTICES
    - '**/*.md'

pool:
  vmImage: 'windows-2019'

variables:
- group: GitHubPATGroup
- group: CodeSign
- group: SonarCloud
- name: solution
  value: '**/*.sln'
- name: NUGET_PACKAGES
  value: $(Pipeline.Workspace)/.nuget/packages

stages:
- stage: Build
  jobs:

  - job: NetFrameworkTesting
    displayName: .NET Framework Testing
    variables:
      targetFramework: net461

    steps:
    - template: build/templates/build.yml
      parameters:
        tag: '.NET Framework'
        targetFramework: $(targetFramework)
        sonarCloud: false
        coverage: false

  - job: NetCoreTesting
    displayName: .NET Testing
    variables:
      targetFramework: net5.0-windows

    steps:
    - template: build/templates/build.yml
      parameters:
        tag: '.NET'
        targetFramework: $(targetFramework)
        sonarCloud: true
        coverage: true
        sign: false

  - job: ReleaseScripts
    displayName: Publish Release Scripts
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'), ${{ parameters.createRelease }} )
    steps:
    - task: PublishPipelineArtifact@1
      displayName: 'Publish Release Scripts'
      inputs:
        targetPath: 'build/ReleaseScripts' 
        artifactName: 'ReleaseScripts'

  - job: Publish
    displayName: Publish
    condition: and(succeeded(), eq(varaibles['Build.SourceBranch'], 'refs/heads/master'))
    dependsOn: [ NetFrameworkTesting, NetCoreTesting ]
    steps:
    - template: build/templates/pre-steps.yml

    - template: build/templates/publish.yml
      parameters:
        tag: '.NET Framework'
        targetFramework: $(targetFramework)

    - template: build/templates/publish.yml
      parameters:
        tag: '.NET'
        targetFramework: $(targetFramework)
      
    - template: build/templates/publish.yml
      parameters:
        tag: 'Self-Contained .NET'
        selfContained: true
        targetFramework: $(targetFramework)

- stage: Release
  dependsOn: Publish
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'). ${{ parameters.createRelease }} )

  jobs:
  - deployment: Deploy
    environment: Release
    strategy:
      runOnce:
        deploy:
          steps:
          
          - task: PowerShell@2
            displayName: 'Check Version'
            inputs:
              targetType: 'filePath'
              filePath: '$(Pipeline.Workspace)/ReleaseScripts/PreRelease.ps1'
              arguments: '"$(Pipeline.Workspace)"'

          - task: ArchiveFiles@2
            displayName: 'Archive .NET Framework Binaries'
            inputs:
              rootFolderOrFile: '$(Pipeline.Workspace)/.NET Framework Binaries'
              includeRootFolder: false
              archiveFile: '$(Build.ArtifactStagingDirectory)/OfficeRibbonXEditor-NETFramework.zip'
          - powershell: >-
              Copy-Item
              -Path "$(Pipeline.Workspace)/.NET Framework Installer/OfficeRibbonXEditor.exe"
              -Destination "$(Build.ArtifactStagingDirectory)/OfficeRibbonXEditor-Installer-NETFramework.exe"
            displayName: 'Copy .NET Framework Installer'
          - task: ArchiveFiles@2
            displayName: 'Archive .NET Binaries'
            inputs:
              rootFolderOrFile: '$(Pipeline.Workspace)/.NET Binaries'
              includeRootFolder: false
              archiveFile: '$(Build.ArtifactStagingDirectory)/OfficeRibbonXEditor-NET5.zip'
          - powershell: >-
              Copy-Item
              -Path "$(Pipeline.Workspace)/.NET Installer/OfficeRibbonXEditor.exe"
              -Destination "$(Build.ArtifactStagingDirectory)/OfficeRibbonXEditor-Installer-NET5.exe"
            displayName: 'Copy .NET Installer'
          - task: GitHubRelease@1
            displayName: 'Create GitHub Release'
            inputs:
              gitHubConnection: 'fernandreu-pat'
              repositoryName: 'fernandreu/office-ribbonx-editor'
              tagSource: userSpecifiedTag
              tag: 'v$(ThreeDigitVersion)'
              title: 'Office RibbonX Editor $(ThreeDigitVersion) (Build $(Build.BuildId))'
              releaseNotesSource: inline
              releaseNotesInline: |
                Released automatically from [Azure Pipelines](https://dev.azure.com/fernandreu-public/OfficeRibbonXEditor/_build/results?buildId=$(Build.BuildId))
                
                ## What's New
                
                For a full list of closed issues since last release, see below. 
                
                ## How to install / use
                
                Download one of the items from the `Assets` section below.
                
                Compressed `.zip` files do not require installation (i.e. will not create any
                entry in the control panel's program list). When feasible, these will contain
                a single `.exe` file.
                
                The .NET Framework builds require at least version 4.6.1 of the .NET Framework
                Runtime. The .NET builds require at least version 5.0 of the .NET Runtime (the
                one for desktop apps is enough). If you need any of these runtimes, check
                [Microsoft's .NET download page](https://dotnet.microsoft.com/download).

              assets: '$(Build.ArtifactStagingDirectory)/*.*'
              isDraft: true
              changeLogType: issueBased
              changeLogLabels: '[{ "label" : "enhancement", "displayName" : "Enhancements", "state" : "closed" }, { "label" : "bug", "displayName" : "Bugs", "state" : "closed" }]'

<Window x:Class="OfficeRibbonXEditor.Views.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:properties="clr-namespace:OfficeRibbonXEditor.Properties"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:resources="clr-namespace:OfficeRibbonXEditor.Resources"
        xmlns:converters="clr-namespace:OfficeRibbonXEditor.Converters"
        xmlns:mvvmlight="http://www.galasoft.ch/mvvmlight"
        xmlns:samples="clr-namespace:OfficeRibbonXEditor.ViewModels.Samples"
        xmlns:tabs="clr-namespace:OfficeRibbonXEditor.ViewModels.Tabs"
        xmlns:documents="clr-namespace:OfficeRibbonXEditor.ViewModels.Documents"
        xmlns:windows="clr-namespace:OfficeRibbonXEditor.ViewModels.Windows"
        xmlns:controls="clr-namespace:OfficeRibbonXEditor.Views.Controls"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz"
        mc:Ignorable="d"
        Title="{x:Static resources:StringsResource.idsApplicationTitle}" 
        Height="{Binding Source={x:Static properties:Settings.Default}, Path=Height}"
        Width="{Binding Source={x:Static properties:Settings.Default}, Path=Width}" 
        Top="{Binding Source={x:Static properties:Settings.Default}, Path=Top}"
        Left="{Binding Source={x:Static properties:Settings.Default}, Path=Left}"
        WindowState="{Binding Source={x:Static properties:Settings.Default}, Path=WindowState}"
        Icon="/Resources/Images/ApplicationIcon.ico"
        ResizeMode="CanResizeWithGrip"
        x:Name="Window"
        AllowDrop="True"
        d:DataContext="{d:DesignInstance windows:MainWindowViewModel}">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <mvvmlight:EventToCommand Command="{Binding ClosingCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <converters:IsNotNullConverter x:Key="IsNotNullConverter"/>
        <Style TargetType="Image">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.25"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:StringToVisibilityConverter x:Key="StringToVisibilityConverter"/>
        <converters:IsOfTypeConverter x:Key="IsOfTypeConverter"/>
        
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="O" Modifiers="Control" Command="{Binding OpenDocumentCommand}"/>
        <KeyBinding Key="S" Modifiers="Control" Command="{Binding SaveCommand}"/>
        <KeyBinding Key="W" Modifiers="Control" Command="{Binding CloseDocumentCommand}"/>
        <KeyBinding Key="F2" Command="{Binding ChangeIconIdCommand}"/>
        <KeyBinding Key="Divide" Modifiers="Control" Command="{Binding ToggleCommentCommand}"/>

        <!--Key bindings directly mapped to Scintilla's actions-->
        <KeyBinding Key="X" Modifiers="Control" Command="{Binding SelectedTab.CutCommand}"/>
        <KeyBinding Key="C" Modifiers="Control" Command="{Binding SelectedTab.CopyCommand}"/>
        <KeyBinding Key="V" Modifiers="Control" Command="{Binding SelectedTab.PasteCommand}"/>
        <KeyBinding Key="Z" Modifiers="Control" Command="{Binding SelectedTab.UndoCommand}"/>
        <KeyBinding Key="Y" Modifiers="Control" Command="{Binding SelectedTab.RedoCommand}"/>
        <KeyBinding Key="A" Modifiers="Control" Command="{Binding SelectedTab.SelectAllCommand}"/>
        <KeyBinding Key="F" Modifiers="Control+Alt" Command="{Binding SelectedTab.FoldCurrentCommand}"/>
        <KeyBinding Key="G" Modifiers="Control+Alt" Command="{Binding SelectedTab.UnfoldCurrentCommand}"/>
        <KeyBinding Key="D0" Modifiers="Alt" Command="{Binding SelectedTab.FoldCommand}">
            <KeyBinding.CommandParameter>
                <system:Int32>0</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="D1" Modifiers="Alt" Command="{Binding SelectedTab.FoldCommand}">
            <KeyBinding.CommandParameter>
                <system:Int32>1</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="D2" Modifiers="Alt" Command="{Binding SelectedTab.FoldCommand}">
            <KeyBinding.CommandParameter>
                <system:Int32>2</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="D3" Modifiers="Alt" Command="{Binding SelectedTab.FoldCommand}">
            <KeyBinding.CommandParameter>
                <system:Int32>3</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="D4" Modifiers="Alt" Command="{Binding SelectedTab.FoldCommand}">
            <KeyBinding.CommandParameter>
                <system:Int32>4</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="D5" Modifiers="Alt" Command="{Binding SelectedTab.FoldCommand}">
            <KeyBinding.CommandParameter>
                <system:Int32>5</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="D6" Modifiers="Alt" Command="{Binding SelectedTab.FoldCommand}">
            <KeyBinding.CommandParameter>
                <system:Int32>6</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="D7" Modifiers="Alt" Command="{Binding SelectedTab.FoldCommand}">
            <KeyBinding.CommandParameter>
                <system:Int32>7</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="D8" Modifiers="Alt" Command="{Binding SelectedTab.FoldCommand}">
            <KeyBinding.CommandParameter>
                <system:Int32>8</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="D0" Modifiers="Alt+Shift" Command="{Binding SelectedTab.UnfoldCommand}">
            <KeyBinding.CommandParameter>
                <system:Int32>0</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="D1" Modifiers="Alt+Shift" Command="{Binding SelectedTab.UnfoldCommand}">
            <KeyBinding.CommandParameter>
                <system:Int32>1</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="D2" Modifiers="Alt+Shift" Command="{Binding SelectedTab.UnfoldCommand}">
            <KeyBinding.CommandParameter>
                <system:Int32>2</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="D3" Modifiers="Alt+Shift" Command="{Binding SelectedTab.UnfoldCommand}">
            <KeyBinding.CommandParameter>
                <system:Int32>3</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="D4" Modifiers="Alt+Shift" Command="{Binding SelectedTab.UnfoldCommand}">
            <KeyBinding.CommandParameter>
                <system:Int32>4</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="D5" Modifiers="Alt+Shift" Command="{Binding SelectedTab.UnfoldCommand}">
            <KeyBinding.CommandParameter>
                <system:Int32>5</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="D6" Modifiers="Alt+Shift" Command="{Binding SelectedTab.UnfoldCommand}">
            <KeyBinding.CommandParameter>
                <system:Int32>6</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="D7" Modifiers="Alt+Shift" Command="{Binding SelectedTab.UnfoldCommand}">
            <KeyBinding.CommandParameter>
                <system:Int32>7</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="D8" Modifiers="Alt+Shift" Command="{Binding SelectedTab.UnfoldCommand}">
            <KeyBinding.CommandParameter>
                <system:Int32>8</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>

        <!--Find / replace dialog controls-->
        <KeyBinding Key="F" Modifiers="Control" Command="{Binding FindCommand}"/>
        <KeyBinding Key="F3" Modifiers="Shift" Command="{Binding FindPreviousCommand}"/>
        <KeyBinding Key="F3" Command="{Binding FindNextCommand}"/>
        <KeyBinding Key="H" Modifiers="Control" Command="{Binding ReplaceCommand}"/>
        <KeyBinding Key="I" Modifiers="Control" Command="{Binding IncrementalSearchCommand}"/>

        <!--GoTo dialog control-->
        <KeyBinding Key="G" Modifiers="Control" Command="{Binding GoToCommand}"/>
    </Window.InputBindings>
    <DockPanel>
        <Menu DockPanel.Dock="Top" Padding="2">
            <MenuItem Header="_File">
                <MenuItem Header="Open" InputGestureText="Ctrl+O" Command="{Binding OpenDocumentCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Resources/Images/open.png"
                               Width="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}" 
                               Height="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Save Current Document" InputGestureText="Ctrl+S" Command="{Binding SaveCommand}" IsEnabled="{Binding SelectedItem, Converter={StaticResource IsNotNullConverter}}">
                    <MenuItem.Icon>
                        <Image Source="/Resources/Images/save.png"
                               Width="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}" 
                               Height="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}"/>
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="Save All Documents" Command="{Binding SaveAllCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Resources/Images/save.png"
                               Width="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}" 
                               Height="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}"/>
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem
                    Header="Save As..." 
                    Command="{Binding SaveAsCommand}"
                    ToolTip="Save the current document with a different name"
                    IsEnabled="{Binding SelectedItem, Converter={StaticResource IsNotNullConverter}}"/>

                <MenuItem 
                    Header="Save a Copy As..." 
                    Command="{Binding SaveACopyAsCommand}"
                    ToolTip="Save a completely separate copy of the current document"
                    IsEnabled="{Binding SelectedItem, Converter={StaticResource IsNotNullConverter}}"/>

                <MenuItem 
                    Header="Close Current Document"
                    InputGestureText="Ctrl+W" 
                    Command="{Binding CloseDocumentCommand}" 
                    IsEnabled="{Binding SelectedItem, Converter={StaticResource IsNotNullConverter}}"/>

                <Separator/>

                <MenuItem Header="Settings..." Command="{Binding ShowSettingsCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Resources/Images/settings.png"
                               Width="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}" 
                               Height="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}"/>
                    </MenuItem.Icon>
                </MenuItem>

                <controls:RecentFileList 
                    x:Name="RecentFileList"
                    ClickCommand="{Binding RecentFileClickCommand}"/>
                <MenuItem Header="Exit" Command="{Binding CloseCommand}"/>
            </MenuItem>
            <MenuItem Header="_Edit" IsEnabled="{Binding IsPartSelected}">
                <MenuItem Header="Find..." InputGestureText="Ctrl+F" Command="{Binding FindCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Resources/Images/find.png"
                               Width="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}" 
                               Height="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Replace..." InputGestureText="Ctrl+H" Command="{Binding ReplaceCommand}"/>
                <MenuItem Header="Incremental Search..." InputGestureText="Ctrl+I" Command="{Binding IncrementalSearchCommand}"/>
                <MenuItem Header="Find Previous" InputGestureText="Shift+F3" Command="{Binding FindPreviousCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Resources/Images/find_previous.png"
                               Width="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}" 
                               Height="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Find Next" InputGestureText="F3" Command="{Binding FindNextCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Resources/Images/find_next.png"
                               Width="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}" 
                               Height="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Go To Line..." InputGestureText="Ctrl+G" Command="{Binding GoToCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Resources/Images/go_to.png"
                               Width="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}" 
                               Height="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Undo" InputGestureText="Ctrl+Z" Command="{Binding SelectedTab.UndoCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Resources/Images/undo.png"
                               Width="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}" 
                               Height="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Redo" InputGestureText="Ctrl+Y" Command="{Binding SelectedTab.RedoCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Resources/Images/redo.png"
                               Width="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}" 
                               Height="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Cut" InputGestureText="Ctrl+X" Command="{Binding SelectedTab.CutCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Resources/Images/cut.png"
                               Width="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}" 
                               Height="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Copy" InputGestureText="Ctrl+C" Command="{Binding SelectedTab.CopyCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Resources/Images/copy.png"
                               Width="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}" 
                               Height="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Paste" InputGestureText="Ctrl+V" Command="{Binding SelectedTab.PasteCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Resources/Images/paste.png"
                               Width="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}" 
                               Height="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Select All" InputGestureText="Ctrl+A" Command="{Binding SelectedTab.SelectAllCommand}"/>
            </MenuItem>
            <MenuItem Header="_View" IsEnabled="{Binding IsEditorTabSelected}">
                <MenuItem Header="Fold All" InputGestureText="Alt+0" Command="{Binding SelectedTab.FoldCommand}">
                    <MenuItem.CommandParameter>
                        <system:Int32>0</system:Int32>
                    </MenuItem.CommandParameter>
                </MenuItem>
                <MenuItem Header="Unfold All" InputGestureText="Alt+Shift+0" Command="{Binding SelectedTab.UnfoldCommand}">
                    <MenuItem.CommandParameter>
                        <system:Int32>0</system:Int32>
                    </MenuItem.CommandParameter>
                </MenuItem>
                <MenuItem Header="Fold Current Level" InputGestureText="Ctrl+Alt+F" Command="{Binding SelectedTab.FoldCurrentCommand}"/>
                <MenuItem Header="Unfold Current Level" InputGestureText="Ctrl+Alt+G" Command="{Binding SelectedTab.UnfoldCurrentCommand}"/>
                <MenuItem Header="Fold Level">
                    <!--TODO: Find a way of avoiding all this repetitive code-->
                    <MenuItem Header="1" InputGestureText="Alt+1" Command="{Binding SelectedTab.FoldCommand}">
                        <MenuItem.CommandParameter>
                            <system:Int32>1</system:Int32>
                        </MenuItem.CommandParameter>
                    </MenuItem>
                    <MenuItem Header="2" InputGestureText="Alt+2" Command="{Binding SelectedTab.FoldCommand}">
                        <MenuItem.CommandParameter>
                            <system:Int32>2</system:Int32>
                        </MenuItem.CommandParameter>
                    </MenuItem>
                    <MenuItem Header="3" InputGestureText="Alt+3" Command="{Binding SelectedTab.FoldCommand}">
                        <MenuItem.CommandParameter>
                            <system:Int32>3</system:Int32>
                        </MenuItem.CommandParameter>
                    </MenuItem>
                    <MenuItem Header="4" InputGestureText="Alt+4" Command="{Binding SelectedTab.FoldCommand}">
                        <MenuItem.CommandParameter>
                            <system:Int32>4</system:Int32>
                        </MenuItem.CommandParameter>
                    </MenuItem>
                    <MenuItem Header="5" InputGestureText="Alt+5" Command="{Binding SelectedTab.FoldCommand}">
                        <MenuItem.CommandParameter>
                            <system:Int32>5</system:Int32>
                        </MenuItem.CommandParameter>
                    </MenuItem>
                    <MenuItem Header="6" InputGestureText="Alt+6" Command="{Binding SelectedTab.FoldCommand}">
                        <MenuItem.CommandParameter>
                            <system:Int32>6</system:Int32>
                        </MenuItem.CommandParameter>
                    </MenuItem>
                    <MenuItem Header="7" InputGestureText="Alt+7" Command="{Binding SelectedTab.FoldCommand}">
                        <MenuItem.CommandParameter>
                            <system:Int32>7</system:Int32>
                        </MenuItem.CommandParameter>
                    </MenuItem>
                    <MenuItem Header="8" InputGestureText="Alt+8" Command="{Binding SelectedTab.FoldCommand}">
                        <MenuItem.CommandParameter>
                            <system:Int32>8</system:Int32>
                        </MenuItem.CommandParameter>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Unfold Level">
                    <MenuItem Header="1" InputGestureText="Alt+Shift+1" Command="{Binding SelectedTab.UnfoldCommand}">
                        <MenuItem.CommandParameter>
                            <system:Int32>1</system:Int32>
                        </MenuItem.CommandParameter>
                    </MenuItem>
                    <MenuItem Header="2" InputGestureText="Alt+Shift+2" Command="{Binding SelectedTab.UnfoldCommand}">
                        <MenuItem.CommandParameter>
                            <system:Int32>2</system:Int32>
                        </MenuItem.CommandParameter>
                    </MenuItem>
                    <MenuItem Header="3" InputGestureText="Alt+Shift+3" Command="{Binding SelectedTab.UnfoldCommand}">
                        <MenuItem.CommandParameter>
                            <system:Int32>3</system:Int32>
                        </MenuItem.CommandParameter>
                    </MenuItem>
                    <MenuItem Header="4" InputGestureText="Alt+Shift+4" Command="{Binding SelectedTab.UnfoldCommand}">
                        <MenuItem.CommandParameter>
                            <system:Int32>4</system:Int32>
                        </MenuItem.CommandParameter>
                    </MenuItem>
                    <MenuItem Header="5" InputGestureText="Alt+Shift+5" Command="{Binding SelectedTab.UnfoldCommand}">
                        <MenuItem.CommandParameter>
                            <system:Int32>5</system:Int32>
                        </MenuItem.CommandParameter>
                    </MenuItem>
                    <MenuItem Header="6" InputGestureText="Alt+Shift+6" Command="{Binding SelectedTab.UnfoldCommand}">
                        <MenuItem.CommandParameter>
                            <system:Int32>6</system:Int32>
                        </MenuItem.CommandParameter>
                    </MenuItem>
                    <MenuItem Header="7" InputGestureText="Alt+Shift+7" Command="{Binding SelectedTab.UnfoldCommand}">
                        <MenuItem.CommandParameter>
                            <system:Int32>7</system:Int32>
                        </MenuItem.CommandParameter>
                    </MenuItem>
                    <MenuItem Header="8" InputGestureText="Alt+Shift+8" Command="{Binding SelectedTab.UnfoldCommand}">
                        <MenuItem.CommandParameter>
                            <system:Int32>8</system:Int32>
                        </MenuItem.CommandParameter>
                    </MenuItem>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Insert" IsEnabled="{Binding SelectedItem, Converter={StaticResource IsNotNullConverter}}">
                <MenuItem Header="Office 2010+ Custom UI Part" Command="{Binding InsertXml14Command}" IsEnabled="{Binding CanInsertXml14Part}">
                    <MenuItem.Icon>
                        <Image Source="/Resources/Images/xml.png"
                               Width="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}" 
                               Height="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Office 2007 Custom UI Part" Command="{Binding InsertXml12Command}" IsEnabled="{Binding CanInsertXml12Part}">
                    <MenuItem.Icon>
                        <Image Source="/Resources/Images/xml.png"
                               Width="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}" 
                               Height="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Icons..." Command="{Binding InsertIconsCommand}" IsEnabled="{Binding IsPartSelected}">
                    <MenuItem.Icon>
                        <Image Source="/Resources/Images/insertPicture.png"
                               Width="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}" 
                               Height="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem 
                    Header="Sample XML"
                    ItemsSource="{Binding XmlSamples.Items}"
                    ToolTipService.ShowOnDisabled="True">
                    <MenuItem.Style>
                        <Style TargetType="{x:Type MenuItem}">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedTab, Converter={StaticResource IsOfTypeConverter}, ConverterParameter={x:Type tabs:EditorTabViewModel}}" Value="True">
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding SelectedItem, Converter={StaticResource IsNotNullConverter}}" Value="True">
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding XmlSamples}" Value="{x:Null}">
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Setter Property="ToolTip" Value="No XML samples were detected; please check the tool's settings"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </MenuItem.Style>
                    <MenuItem.Icon>
                        <Image
                            Source="/Resources/Images/xml.png"
                            Width="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}" 
                            Height="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}"/>
                    </MenuItem.Icon>
                    <MenuItem.Resources>

                        <Image
                            x:Key="SampleIcon"
                            x:Shared="False"
                            Source="/Resources/Images/xml.png"
                            Width="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}" 
                            Height="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}"/>

                        <Image
                            x:Key="SampleFolder"
                            x:Shared="False"
                            Source="/Resources/Images/folder.png"
                            Width="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}" 
                            Height="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}"/>

                        <Style TargetType="{x:Type MenuItem}">
                            <Setter Property="Header" Value="{Binding Name}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Converter={StaticResource IsOfTypeConverter}, ConverterParameter={x:Type samples:SampleFolderViewModel}}" Value="True">
                                    <Setter Property="Icon" Value="{StaticResource SampleFolder}"/>
                                    <Setter Property="ItemsSource" Value="{Binding Items}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Converter={StaticResource IsOfTypeConverter}, ConverterParameter={x:Type samples:XmlSampleViewModel}}" Value="True">
                                    <Setter Property="Icon" Value="{StaticResource SampleIcon}"/>
                                    <Setter Property="Command" Value="{Binding DataContext.InsertXmlSampleCommand, ElementName=Window}"/>
                                    <Setter Property="CommandParameter" Value="{Binding}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </MenuItem.Resources>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Header="Useful links" ItemsSource="{Binding HelpLinks}">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="MenuItem">
                            <Setter Property="Header" Value="{Binding Key}"/>
                            <Setter Property="Command" Value="{Binding DataContext.OpenHelpLinkCommand, ElementName=Window}"/>
                            <Setter Property="CommandParameter" Value="{Binding Value}"/>
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <Separator/>
                <MenuItem Header="About" Command="{Binding ShowAboutCommand}"/>
            </MenuItem>
        </Menu>

        <ToolBarTray DockPanel.Dock="Top" IsLocked="True">
            <ToolBar OverflowMode="Never" Loaded="OnToolBarLoaded">

                <Button ToolTip="Open an Office document" Command="{Binding OpenDocumentCommand}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Resources/Images/open.png" Width="16" Height="16"/>
                        <TextBlock Margin="3,0,0,0" VerticalAlignment="Center">Open</TextBlock>
                    </StackPanel>
                </Button>

                <Button ToolTip="Save the current Office document" Command="{Binding SaveCommand}" IsEnabled="{Binding SelectedItem, Converter={StaticResource IsNotNullConverter}}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Resources/Images/save.png" Width="16" Height="16"/>
                        <TextBlock Margin="3,0,0,0" VerticalAlignment="Center">Save</TextBlock>
                    </StackPanel>
                </Button>

                <Separator/>

                <CheckBox IsChecked="{Binding ShowWhitespaces}" 
                          ToolTip="Show space, tab and line end characters in the editor">
                    <Image Source="/Resources/Images/pilcrow.png" Width="16" Height="16"/>
                </CheckBox>

                <Button Command="{Binding ToggleCommentCommand}" 
                        IsEnabled="{Binding IsPartSelected}"
                        ToolTip="Comment / uncomment the currently selected lines">
                    <Image Source="/Resources/Images/tag.png" Width="16" Height="16"/>
                </Button>

                <Separator/>

                <Button ToolTip="View the editor settings" Command="{Binding ShowSettingsCommand}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Resources/Images/settings.png" Width="16" Height="16"/>
                        <TextBlock Margin="3,0,0,0" VerticalAlignment="Center">Settings</TextBlock>
                    </StackPanel>
                </Button>

                <Separator/>

                <Button ToolTip="Insert Icons" Command="{Binding InsertIconsCommand}" IsEnabled="{Binding IsPartSelected}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Resources/Images/insertPicture.png" Width="16" Height="16"/>
                        <TextBlock Margin="3,0,0,0" VerticalAlignment="Center">Insert Icons</TextBlock>
                    </StackPanel>
                </Button>

                <Button ToolTip="Check whether the current XML file conforms to its corresponding schema" Command="{Binding ValidateCommand}" IsEnabled="{Binding IsEditorTabSelected}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Resources/Images/check.png" Width="16" Height="16"/>
                        <TextBlock Margin="3,0,0,0" VerticalAlignment="Center">Validate</TextBlock>
                    </StackPanel>
                </Button>

                <Button ToolTip="Generate callbacks for the current XML file" Command="{Binding GenerateCallbacksCommand}" IsEnabled="{Binding IsEditorTabSelected}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Resources/Images/callbacks.png" Width="16" Height="16"/>
                        <TextBlock Margin="3,0,0,0" VerticalAlignment="Center">Generate Callbacks</TextBlock>
                    </StackPanel>
                </Button>

                <CheckBox IsChecked="{Binding ReloadOnSave}" ToolTip="To ensure you do not delete changes made externally, you can reload the documents right before they are to be saved">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Resources/Images/redo.png" Width="16" Height="16"/>
                        <TextBlock Margin="3,0,0,0" VerticalAlignment="Center">Reload on Save</TextBlock>
                    </StackPanel>
                </CheckBox>

                <Separator Visibility="{Binding NewerVersion, Converter={StaticResource StringToVisibilityConverter}}"/>

                <Button FontWeight="Bold"
                        Visibility="{Binding NewerVersion, Converter={StaticResource StringToVisibilityConverter}}"
                        Command="{Binding NewerVersionCommand}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Resources/Images/bricks.png" Width="16" Height="16"/>
                        <TextBlock Margin="3,0,0,0" VerticalAlignment="Center" Text="{Binding NewerVersion, StringFormat={}v{0} Available!}"/>
                    </StackPanel>
                </Button>
            </ToolBar>
        </ToolBarTray>

        <StatusBar DockPanel.Dock="Bottom" Height="Auto">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem>
                <TextBlock Text="{Binding CurrentDocument.Document.Name}"/>
            </StatusBarItem>
            <StatusBarItem Grid.Column="1" Margin="0,0,10,0">
                <StackPanel Orientation="Horizontal">
                    <Label Content="Zoom factor:" Padding="0,0,4,0"/>
                    <xctk:IntegerUpDown x:Name="ZoomBox" Value="{Binding SelectedTab.Zoom}" Height="20" Minimum="-10" Maximum="20"/>
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem Grid.Column="2">
                <TextBlock Margin="0,0,20,0" Text="{Binding SelectedTab.StatusText}"/>
            </StatusBarItem>
        </StatusBar>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="150"/>
                <ColumnDefinition Width="4"/>
                <ColumnDefinition Width="34*"/>
                <ColumnDefinition Width="397*"/>
            </Grid.ColumnDefinitions>

            <TreeView
                Name="DocumentView"
                AutomationProperties.AutomationId="TreeView"
                ItemsSource="{Binding DocumentList}" 
                Grid.Column="0"
                PreviewMouseRightButtonDown="OnTreeViewRightClick"
                PreviewMouseDoubleClick="OnPreviewMouseDoubleClick"
                SelectedItemChanged="OnDocumentViewSelectionChanged"
                HorizontalAlignment="Stretch">
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <d:Style.DataContext>
                            <x:Type Type="documents:TreeViewItemViewModel"/>
                        </d:Style.DataContext>
                        <EventSetter Event="RequestBringIntoView" Handler="OnTreeViewItemRequestBringIntoView"/>
                        <EventSetter Event="Selected" Handler="OnTreeViewItemSelected"/>
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                        <Setter Property="FontWeight" Value="Normal"/>
                        <Setter Property="Padding" Value="3"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="FontWeight" Value="Bold"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.Resources>
                    <HierarchicalDataTemplate
                        DataType="{x:Type documents:OfficeDocumentViewModel}"
                        ItemsSource="{Binding Children}">
                        <StackPanel Orientation="Horizontal"
                                    Tag="{Binding ElementName=Window, Path=DataContext}">
                            <Image Width="16" Height="16" Margin="3,0" Source="{Binding ImageSource}"/>
                            <TextBlock Text="{Binding Name}"/>
                            <StackPanel.ContextMenu>
                                <ContextMenu d:DataContext="{Binding DataContext, ElementName=Window}" 
                                             DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                    <MenuItem Header="Insert Office 2010+ Custom UI Part" 
                                              Command="{Binding InsertXml14Command}" 
                                              IsEnabled="{Binding CanInsertXml14Part}">
                                        <MenuItem.Icon>
                                            <Image Source="/Resources/Images/xml.png"
                                                   Width="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}" 
                                                   Height="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="Insert Office 2007 Custom UI Part" 
                                              Command="{Binding InsertXml12Command}"
                                              IsEnabled="{Binding CanInsertXml12Part}">
                                        <MenuItem.Icon>
                                            <Image Source="/Resources/Images/xml.png"
                                                   Width="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}" 
                                                   Height="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <Separator/>
                                    <MenuItem Header="Save" Command="{Binding SaveCommand}">
                                        <MenuItem.Icon>
                                            <Image Source="/Resources/Images/save.png"
                                                   Width="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}" 
                                                   Height="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="Save As..." Command="{Binding SaveAsCommand}"/>
                                    <MenuItem Header="Close" Command="{Binding CloseDocumentCommand}"/>
                                </ContextMenu>
                            </StackPanel.ContextMenu>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                    <HierarchicalDataTemplate
                        DataType="{x:Type documents:OfficePartViewModel}"
                        ItemsSource="{Binding Children}">
                        <StackPanel Orientation="Horizontal"
                                    Tag="{Binding ElementName=Window, Path=DataContext}">
                            <Image Width="16" Height="16" Margin="3,0" Source="{Binding ImageSource}"/>
                            <TextBlock Text="{Binding Name}"/>
                            <StackPanel.ContextMenu>
                                <ContextMenu d:DataContext="{Binding DataContext, ElementName=Window}" 
                                             DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                    <MenuItem Header="Open" Command="{Binding OpenTabCommand}"/>
                                    <MenuItem Header="Insert icons..." Command="{Binding InsertIconsCommand}">
                                        <MenuItem.Icon>
                                            <Image Source="/Resources/Images/insertPicture.png"
                                                   Width="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}" 
                                                   Height="{Binding Source={x:Static properties:Settings.Default}, Path=IconSize}"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="Remove" Command="{Binding RemoveCommand}"/>
                                </ContextMenu>
                            </StackPanel.ContextMenu>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                    <DataTemplate DataType="{x:Type documents:IconViewModel}">
                        <StackPanel Orientation="Horizontal"
                                    Tag="{Binding ElementName=Window, Path=DataContext}">
                            <Image Width="16" Height="16" Margin="3,0" Source="{Binding Image}"/>
                            <TextBlock Text="{Binding Name}" Visibility="{Binding IsEditingId, Converter={StaticResource InverseBooleanToVisibilityConverter}}"/>
                            <TextBox Text="{Binding NewName, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding IsEditingId, Converter={StaticResource BooleanToVisibilityConverter}}" KeyDown="OnChangeIdTextDown" IsVisibleChanged="OnIdTextVisible"/>
                            <StackPanel.ContextMenu>
                                <ContextMenu d:DataContext="{Binding DataContext, ElementName=Window}" 
                                             DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                    <MenuItem Header="Open" Command="{Binding OpenTabCommand}"/>
                                    <MenuItem Header="Change ID" InputGestureText="F2" Command="{Binding ChangeIconIdCommand}"/>
                                    <MenuItem Header="Remove" Command="{Binding RemoveCommand}"/>
                                </ContextMenu>
                            </StackPanel.ContextMenu>
                        </StackPanel>
                    </DataTemplate>
                </TreeView.Resources>
            </TreeView>

            <GridSplitter
                Grid.Column="1" 
                Width="4" 
                VerticalAlignment="Stretch"
                ResizeBehavior="PreviousAndNext"/>

            <dragablz:TabablzControl
                Grid.Column="2"
                Grid.ColumnSpan="2"
                AutomationProperties.AutomationId="TabView"
                ItemsSource="{Binding OpenTabs}"
                SelectedItem="{Binding SelectedTab}">
                <dragablz:TabablzControl.HeaderItemTemplate>
                    <DataTemplate>
                        <StackPanel
                            d:DataContext="{d:DesignInstance tabs:EditorTabViewModel}"
                            Orientation="Horizontal">
                            <Grid>
                                <TextBlock Text="{Binding Title}"/>
                                <Thumb
                                    Style="{DynamicResource InvisibleThumbStyle}"
                                    dragablz:DragablzItem.IsCustomThumb="True"></Thumb>
                            </Grid>
                            <Button
                                Style="{StaticResource CloseItemCommandButtonStyle}"
                                Command="{Binding MainWindow.CloseTabCommand}"
                                CommandParameter="{Binding}"/>
                        </StackPanel>
                    </DataTemplate>
                </dragablz:TabablzControl.HeaderItemTemplate>
                <dragablz:TabablzControl.ContentTemplate>
                    <DataTemplate>
                        <ContentControl Content="{Binding}"/>
                    </DataTemplate>
                </dragablz:TabablzControl.ContentTemplate>
                <TabControl.Resources>
                    <Style TargetType="{x:Type Thumb}" x:Key="InvisibleThumbStyle">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Grid Background="{TemplateBinding Background}" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <DataTemplate DataType="{x:Type tabs:EditorTabViewModel}">
                        <controls:EditorTab/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type tabs:IconTabViewModel}">
                        <controls:IconTab/>
                    </DataTemplate>
                </TabControl.Resources>
            </dragablz:TabablzControl>

        </Grid>
    </DockPanel>
</Window>

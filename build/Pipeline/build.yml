parameters:
  targetFramework: 'net6.0-windows'
  tag: '.NET'
  sonarCloud: false
  coverage: false

steps:

- template: pre-steps.yml

- task: SonarCloudPrepare@1
  displayName: 'Prepare SonarCloud analysis'
  condition: and(succeeded(), ${{ parameters.sonarCloud }} )
  inputs:
    SonarCloud: 'fernandreu-SonarCloud'
    organization: '$(SonarOrganization)'
    scannerMode: 'MSBuild'
    projectKey: '$(SonarProjectKey)'
    projectName: '$(SonarProjectName)'
    projectVersion: '$(Build.BuildNumber)'
    extraProperties: |
      sonar.exclusions=$(Build.SourcesDirectory)/**/*.CommandGenerator.cs
      sonar.cs.vstest.reportsPaths=$(Agent.TempDirectory)/*.trx
      sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/TestResults/CodeCoverage/coverage.${{ parameters.targetFramework }}.opencover.xml

- task: DotNetCoreCLI@2
  displayName: 'Build solution'
  inputs:
    command: build
    projects: $(Build.SourcesDirectory)/*.sln
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Run Tests'
  inputs:
    command: test
    projects: '$(Build.SourcesDirectory)/**/*Tests.csproj'
    arguments: >-
      --no-build
      --configuration $(buildConfiguration)
      --framework ${{ parameters.targetFramework }}
      /p:CollectCoverage=${{ parameters.coverage }}
      /p:Exclude=[Scintilla*]*
      /p:IncludeTestAssembly=true
      /p:CoverletOutputFormat=json%2Ccobertura%2Copencover
      /p:CoverletOutput=$(Build.SourcesDirectory)/TestResults/CodeCoverage/
      /p:mergeWith=$(Build.SourcesDirectory)/TestResults/CodeCoverage/coverage.${{ parameters.targetFramework }}.json

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage report'
  condition: and(succeeded(), ${{ parameters.coverage }} )
  inputs:
    codeCoverageTool: 'cobertura'
    summaryFileLocation: '$(Build.SourcesDirectory)/TestResults/**/coverage.${{ parameters.targetFramework }}.cobertura.xml'

- task: SonarCloudAnalyze@1
  displayName: 'Run SonarCloud code analysis'
  condition: and(succeeded(), ${{ parameters.sonarCloud }} )

- task: SonarCloudPublish@1
  condition: and(succeeded(), ${{ parameters.sonarCloud }} )
  displayName: 'Publish SonarCloud quality gate results'
